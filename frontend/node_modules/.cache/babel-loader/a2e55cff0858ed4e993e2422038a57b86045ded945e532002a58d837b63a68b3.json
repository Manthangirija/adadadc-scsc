{"ast":null,"code":"import React,{useState,useEffect}from\"react\";import\"./Alllist.css\";import Select from\"react-select\";import{Link}from\"react-router-dom\";import axios from\"axios\";import html2pdf from\"html2pdf.js\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function Alllist(){const[selectedOption,setSelectedOption]=useState({value:\"today\",label:\"Today All\"});const[filteredProducts,setFilteredProducts]=useState([]);const[totalAmount,setTotalAmount]=useState(0);const[loading,setLoading]=useState(false);const[error,setError]=useState(null);const options=[{value:\"today\",label:\"Today All\"},{value:\"All\",label:\"All\"},{value:\"january\",label:\"January\"},{value:\"february\",label:\"February\"},{value:\"march\",label:\"March\"},{value:\"april\",label:\"April\"},{value:\"may\",label:\"May\"},{value:\"june\",label:\"June\"},{value:\"july\",label:\"July\"},{value:\"august\",label:\"August\"},{value:\"september\",label:\"September\"},{value:\"october\",label:\"October\"},{value:\"november\",label:\"November\"},{value:\"december\",label:\"December\"}];useEffect(()=>{fetchFilteredProducts(selectedOption.value);},[selectedOption]);const fetchFilteredProducts=async filterCriteria=>{try{setLoading(true);setError(null);const response=await axios.post(\"/filterProducts\",{email:localStorage.getItem(\"rememberedEmail\"),filterCriteria:filterCriteria});setFilteredProducts(response.data.products);setTotalAmount(response.data.totalAmount);}catch(error){setError(\"Error fetching data\");console.error(\"Error fetching filtered products:\",error);}finally{setLoading(false);}};const isMonthAvailable=()=>{if(selectedOption.value!==\"today\"&&filteredProducts.length===0&&!loading&&!error){return true;}return false;};const exportToPDF=()=>{const content=document.getElementById(\"pdf-content\");html2pdf(content);};const formatTimestamp=timestamp=>{const date=new Date(timestamp);const hours=date.getHours();const minutes=date.getMinutes();const ampm=hours>=12?\"PM\":\"AM\";const formattedHours=hours%12||12;const formattedMinutes=minutes.toString().padStart(2,\"0\");const formattedDate=\"\".concat(formattedHours,\".\").concat(formattedMinutes,\" \").concat(ampm,\" || \").concat(date.getDate(),\"-\").concat(date.getMonth()+1,\"-\").concat(date.getFullYear());return formattedDate;};let kharcha=filteredProducts.reduce((accumulator,product)=>{return accumulator+parseInt(product.productAmount);},0);return/*#__PURE__*/_jsxs(\"div\",{className:\"view_all\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"title\",children:[/*#__PURE__*/_jsx(\"p\",{children:/*#__PURE__*/_jsx(Link,{className:\"link\",to:\"/home\",children:/*#__PURE__*/_jsx(\"i\",{className:\"fa-solid fa-arrow-left\"})})}),/*#__PURE__*/_jsx(\"h1\",{children:\"View All Transactions\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"btn_viewall\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"dropdown\",children:/*#__PURE__*/_jsx(Select,{options:options,value:selectedOption,onChange:setSelectedOption})}),/*#__PURE__*/_jsx(\"div\",{className:\"export_pdf\",children:/*#__PURE__*/_jsx(\"button\",{onClick:exportToPDF,children:\"Export Pdf\"})})]}),/*#__PURE__*/_jsx(\"div\",{className:\"main_list\",children:/*#__PURE__*/_jsx(\"div\",{className:\"transaction_details_lists\",id:\"pdf-content\",children:/*#__PURE__*/_jsxs(\"table\",{children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{children:\"Products\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Date and Time\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Amount\"})]})}),/*#__PURE__*/_jsxs(\"tbody\",{children:[loading&&/*#__PURE__*/_jsx(\"tr\",{children:/*#__PURE__*/_jsx(\"td\",{colSpan:\"3\",children:\"Loading...\"})}),error&&/*#__PURE__*/_jsx(\"tr\",{children:/*#__PURE__*/_jsx(\"td\",{colSpan:\"3\",children:error})}),isMonthAvailable()&&/*#__PURE__*/_jsx(\"tr\",{children:/*#__PURE__*/_jsxs(\"td\",{className:\"error_messag\",colSpan:\"3\",children:[\"No transactions found for \",selectedOption.label]})}),!loading&&!error&&!isMonthAvailable()&&filteredProducts.map((product,index)=>/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:product.productName}),/*#__PURE__*/_jsx(\"td\",{children:formatTimestamp(product.timestamp)}),/*#__PURE__*/_jsxs(\"td\",{className:\"red_span\",children:[\"- \",product.productAmount]})]},index)),/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{className:\"total_text\",colSpan:1,children:\"Total\"}),/*#__PURE__*/_jsx(\"td\",{}),/*#__PURE__*/_jsx(\"td\",{className:\"total_text\",colSpan:1,children:kharcha})]})]})]})})})]});}export default Alllist;","map":{"version":3,"names":["React","useState","useEffect","Select","Link","axios","html2pdf","jsx","_jsx","jsxs","_jsxs","Alllist","selectedOption","setSelectedOption","value","label","filteredProducts","setFilteredProducts","totalAmount","setTotalAmount","loading","setLoading","error","setError","options","fetchFilteredProducts","filterCriteria","response","post","email","localStorage","getItem","data","products","console","isMonthAvailable","length","exportToPDF","content","document","getElementById","formatTimestamp","timestamp","date","Date","hours","getHours","minutes","getMinutes","ampm","formattedHours","formattedMinutes","toString","padStart","formattedDate","concat","getDate","getMonth","getFullYear","kharcha","reduce","accumulator","product","parseInt","productAmount","className","children","to","onChange","onClick","id","colSpan","map","index","productName"],"sources":["C:/Users/dell/Desktop/saving-project-main/frontend/src/Components/Alllist.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"./Alllist.css\";\nimport Select from \"react-select\";\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport html2pdf from \"html2pdf.js\";\n\nfunction Alllist() {\n  const [selectedOption, setSelectedOption] = useState({\n    value: \"today\",\n    label: \"Today All\",\n  });\n  const [filteredProducts, setFilteredProducts] = useState([]);\n  const [totalAmount, setTotalAmount] = useState(0);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const options = [\n    { value: \"today\", label: \"Today All\" },\n    { value: \"All\", label: \"All\" },\n    { value: \"january\", label: \"January\" },\n    { value: \"february\", label: \"February\" },\n    { value: \"march\", label: \"March\" },\n    { value: \"april\", label: \"April\" },\n    { value: \"may\", label: \"May\" },\n    { value: \"june\", label: \"June\" },\n    { value: \"july\", label: \"July\" },\n    { value: \"august\", label: \"August\" },\n    { value: \"september\", label: \"September\" },\n    { value: \"october\", label: \"October\" },\n    { value: \"november\", label: \"November\" },\n    { value: \"december\", label: \"December\" },\n  ];\n\n  useEffect(() => {\n    fetchFilteredProducts(selectedOption.value);\n  }, [selectedOption]);\n\n  const fetchFilteredProducts = async (filterCriteria) => {\n    try {\n      setLoading(true);\n      setError(null);\n      const response = await axios.post(\n        \"/filterProducts\",\n        {\n          email: localStorage.getItem(\"rememberedEmail\"),\n          filterCriteria: filterCriteria,\n        }\n      );\n      setFilteredProducts(response.data.products);\n      setTotalAmount(response.data.totalAmount);\n    } catch (error) {\n      setError(\"Error fetching data\");\n      console.error(\"Error fetching filtered products:\", error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const isMonthAvailable = () => {\n    if (\n      selectedOption.value !== \"today\" &&\n      filteredProducts.length === 0 &&\n      !loading &&\n      !error\n    ) {\n      return true;\n    }\n    return false;\n  };\n\n  const exportToPDF = () => {\n    const content = document.getElementById(\"pdf-content\");\n    html2pdf(content);\n  };\n  const formatTimestamp = (timestamp) => {\n    const date = new Date(timestamp);\n    const hours = date.getHours();\n    const minutes = date.getMinutes();\n    const ampm = hours >= 12 ? \"PM\" : \"AM\";\n    const formattedHours = hours % 12 || 12;\n    const formattedMinutes = minutes.toString().padStart(2, \"0\");\n\n    const formattedDate = `${formattedHours}.${formattedMinutes} ${ampm} || ${date.getDate()}-${\n      date.getMonth() + 1\n    }-${date.getFullYear()}`;\n\n    return formattedDate;\n  };\n  let kharcha = filteredProducts.reduce((accumulator, product) => {\n    return accumulator + parseInt(product.productAmount);\n  }, 0);\n\n  return (\n    <div className=\"view_all\">\n      <div className=\"title\">\n        <p>\n          <Link className=\"link\" to=\"/home\">\n            <i className=\"fa-solid fa-arrow-left\"></i>\n          </Link>\n        </p>\n        <h1>View All Transactions</h1>\n      </div>\n\n      <div className=\"btn_viewall\">\n        <div className=\"dropdown\">\n          <Select\n            options={options}\n            value={selectedOption}\n            onChange={setSelectedOption}\n          />\n        </div>\n        <div className=\"export_pdf\">\n          <button onClick={exportToPDF}>Export Pdf</button>\n        </div>\n      </div>\n      <div className=\"main_list\">\n        <div className=\"transaction_details_lists\" id=\"pdf-content\">\n          <table>\n            <thead>\n              <tr>\n                <th>Products</th>\n                <th>Date and Time</th>\n                <th>Amount</th>\n              </tr>\n            </thead>\n            <tbody>\n              {loading && (\n                <tr>\n                  <td colSpan=\"3\">Loading...</td>\n                </tr>\n              )}\n              {error && (\n                <tr>\n                  <td colSpan=\"3\">{error}</td>\n                </tr>\n              )}\n              {isMonthAvailable() && (\n                <tr>\n                  <td className=\"error_messag\" colSpan=\"3\">\n                    No transactions found for {selectedOption.label}\n                  </td>\n                </tr>\n              )}\n              {!loading &&\n                !error &&\n                !isMonthAvailable() &&\n                filteredProducts.map((product, index) => (\n                  <tr key={index}>\n                    <td>{product.productName}</td>\n                    <td>{formatTimestamp(product.timestamp)}</td>\n                    <td className=\"red_span\">- {  product.productAmount}</td>\n                  </tr>\n                ))}\n                <tr>\n                  <td className=\"total_text\" colSpan={1}>Total</td>\n                  <td></td>\n                  <td className=\"total_text\" colSpan={1}>{kharcha}</td>\n                </tr>\n                \n            </tbody>\n          </table>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Alllist; \n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}